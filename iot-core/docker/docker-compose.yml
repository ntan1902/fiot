version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.10.2-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"    # AMQP
      - "5671:5671"    # AMQP
      - "15672:15672"  # Management UI
      - "61613:61613"  # STOMP
      - "1883:1883"    # MQTT
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    command: >
      bash -c "rabbitmq-plugins enable rabbitmq_mqtt rabbitmq_web_mqtt rabbitmq_stomp rabbitmq_web_stomp &&
              rabbitmq-server"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: bitnami/redis:7.2
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/bitnami/redis/data
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: postgresql
    command: -N 500  # Set max_connections to 500
    environment:
      POSTGRES_DB: fiot
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d fiot" ]
      interval: 30s
      timeout: 10s
      retries: 3
  maildev:
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

volumes:
  rabbitmq_data:
  redis_data:
  postgres_data: